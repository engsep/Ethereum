{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct ProofOfExistence.Proof",
						"name": "",
						"type": "tuple"
					}
				],
				"name": "Notarized",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "desc",
						"type": "string"
					}
				],
				"name": "certify",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					}
				],
				"name": "check",
				"outputs": [
					{
						"internalType": "bool",
						"name": "result",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					}
				],
				"name": "createProofHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "getProof",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					}
				],
				"name": "notarize",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "verify",
				"outputs": [
					{
						"internalType": "bool",
						"name": "result",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "0x7efC9d38581c7Cb8372325c349Ec5095D027B3Dd",
			"custom:dev-run-script": "./scripts/send_to_replit_(PoE).ts",
			"details": "Notarization of documents into the Blockchain through the hash of their content.",
			"kind": "dev",
			"methods": {
				"certify(string,string)": {
					"details": "Calculate and notarize the proof of a document"
				},
				"check(string)": {
					"details": "Calculate and verify if the proof of a document has been notarized"
				},
				"createProofHash(string)": {
					"details": "Calculate the document proof as the SHA-3 hash of its content"
				},
				"getProof(bytes32)": {
					"details": "Get the document proof data associated to a notarized hash, if any"
				},
				"notarize(bytes32,string)": {
					"details": "Store the proof of a dacument in the contract state"
				},
				"verify(bytes32)": {
					"details": "Verify if a hash has been notarized as proof of a document"
				}
			},
			"stateVariables": {
				"proofs": {
					"details": "The contract state"
				}
			},
			"title": "Proof of Existence",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/PoE_v5.sol": "ProofOfExistence"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/PoE_v5.sol": {
			"keccak256": "0x046a0228ac32123c52240ba96939a2991940a661613613fc68ec4352f69c4fe0",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://3e19339673fb74d2958c40395e61a7cac8df7e527b8b3f9e2c97515584c93f1a",
				"dweb:/ipfs/QmNyn5DEUtx92v9kF4yV5YiU9MefgtMESc8Z36btzrPff7"
			]
		}
	},
	"version": 1
}
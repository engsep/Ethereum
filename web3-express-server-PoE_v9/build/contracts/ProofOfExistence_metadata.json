{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct ProofOfExistence.Proof",
						"name": "",
						"type": "tuple"
					}
				],
				"name": "Notarized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct ProofOfExistence.Proof",
						"name": "",
						"type": "tuple"
					}
				],
				"name": "Nullified",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					}
				],
				"name": "cancel",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					}
				],
				"name": "cancelDocumentOnly",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					}
				],
				"name": "certify",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					}
				],
				"name": "certifyDocumentOnly",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					}
				],
				"name": "check",
				"outputs": [
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "document",
						"type": "string"
					}
				],
				"name": "createProofHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "getHistory",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof[]",
						"name": "history",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "getProof",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					}
				],
				"name": "notarize",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "notarizeHashOnly",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					}
				],
				"name": "nullify",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "nullifyHashOnly",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "provider",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isNotarized",
								"type": "bool"
							}
						],
						"internalType": "struct ProofOfExistence.Proof",
						"name": "proof",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "verify",
				"outputs": [
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "0x7efC9d38581c7Cb8372325c349Ec5095D027B3Dd",
			"custom:dev-run-script": "./scripts/deploy_with_ethers_(PoE).ts",
			"details": "Notarization of documents, with nullify and get support, custom metadata and state change history.",
			"events": {
				"Notarized(bytes32,(string,address,uint256,uint256,bool))": {
					"details": "Notifies the notarization of each document."
				},
				"Nullified(bytes32,(string,address,uint256,uint256,bool))": {
					"details": "Notifies the nullifications of every proof."
				}
			},
			"kind": "dev",
			"methods": {
				"cancel(string,string)": {
					"details": "Calculate the hash from the content and deregister the proof of a notarized document with metadata.",
					"params": {
						"document": "The content of the document",
						"metadata": "Unencrypted custom description attached to the proof"
					},
					"returns": {
						"hash": "The hash of the document",
						"proof": "The proof of the document"
					}
				},
				"cancelDocumentOnly(string)": {
					"details": "Calculate the hash from the content and deregister the proof of a notarized document.",
					"params": {
						"document": "The content of the document"
					},
					"returns": {
						"hash": "The hash of the document",
						"proof": "The proof of the document"
					}
				},
				"certify(string,string)": {
					"details": "Calculate the hash from the content and register the proof of a document with metadata.",
					"params": {
						"document": "The content of the document",
						"metadata": "Unencrypted custom description attached to the proof"
					},
					"returns": {
						"hash": "The hash of the document",
						"proof": "The proof of the document"
					}
				},
				"certifyDocumentOnly(string)": {
					"details": "Calculate the hash from the content and register the proof of a document.",
					"params": {
						"document": "The content of the document"
					},
					"returns": {
						"hash": "The hash of the document",
						"proof": "The proof of the document"
					}
				},
				"check(string)": {
					"details": "Calculate the hash from the content and check the state of the proof of a document.",
					"params": {
						"document": "The content of the document"
					},
					"returns": {
						"state": "Latest state of the proof (`true` = notarized, `false` = nullified)"
					}
				},
				"createProofHash(string)": {
					"details": "Calculate the hash of a document from its content (legacy).",
					"params": {
						"document": "The content of the document"
					},
					"returns": {
						"hash": "The hash of the document"
					}
				},
				"getHistory(bytes32)": {
					"details": "Return the change history of the proof of a document throgh its hash.",
					"params": {
						"hash": "The hash of the document"
					},
					"returns": {
						"history": "The list of proof changes"
					}
				},
				"getProof(bytes32)": {
					"details": "Return the proof of a document throgh its hash.",
					"params": {
						"hash": "The hash of the document"
					},
					"returns": {
						"proof": "The proof of the document"
					}
				},
				"notarize(bytes32,string)": {
					"details": "Register the proof of a document throgh its hash with metadata.",
					"params": {
						"hash": "The hash of the document",
						"metadata": "Unencrypted custom description attached to the proof"
					},
					"returns": {
						"proof": "The proof of the document"
					}
				},
				"notarizeHashOnly(bytes32)": {
					"details": "Register the proof of a document throgh its hash.",
					"params": {
						"hash": "The hash of the document"
					},
					"returns": {
						"proof": "The proof of the document"
					}
				},
				"nullify(bytes32,string)": {
					"details": "Deregister the proof of a notarized document throgh its hash with metadata.",
					"params": {
						"hash": "The hash of the document",
						"metadata": "Unencrypted custom description attached to the proof"
					},
					"returns": {
						"proof": "The proof of the document"
					}
				},
				"nullifyHashOnly(bytes32)": {
					"details": "Deregister the proof of a notarized document throgh its hash.",
					"params": {
						"hash": "The hash of the document"
					},
					"returns": {
						"proof": "The proof of the document"
					}
				},
				"verify(bytes32)": {
					"details": "Return the state of the proof of a document throgh its hash.",
					"params": {
						"hash": "The hash of the document"
					},
					"returns": {
						"state": "Latest state of the proof (`true` = notarized, `false` = nullified)"
					}
				}
			},
			"stateVariables": {
				"proofs": {
					"details": "List of all registered proofs of existence."
				}
			},
			"title": "Proof of Existence (PoE) - Extended Version",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/PoE_v9.sol": "ProofOfExistence"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/PoE_v9.sol": {
			"keccak256": "0x6c6b9e889d3131ece88642ed5e2f2d5a60317ccf21ebd983657e59a697b1e2be",
			"license": "MIT",
			"urls": [
				"bzz-raw://19ad89f20f6b9cf52e068e8d43d3f61d1858e806c68cb73e196a6ad7eb0f814f",
				"dweb:/ipfs/QmSPXNbhWPh7Lc2TKxJXphga7Htqkxhp4dd5AXLqMBwxqs"
			]
		}
	},
	"version": 1
}